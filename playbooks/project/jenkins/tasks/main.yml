---
- name: Clone Git repository
  tags: run_jenkins 
  git:
    repo: "{{ git_repo_url }}"
    dest: "{{ target_directory }}"
    key_file: "{{ sshkey }}"
    clone: yes
    update: yes
    version: "feature/extended_testing"
    accept_hostkey: yes
    force: yes
  become_user: cddeploy

- name: Remove Jenkins image
  tags: remove_jenkins
  docker_image:
    state: absent
    name: jenkins
    tag: v1.0
    force_absent: true

- name: Build Jenkins image
  tags: build_jenkins
  docker_image:
    name: jenkins:v1.0
    build:
      path: '{{ target_directory }}'
    source: build
    state: present
    force_source: false
  register: jenkins_build

- name: Print build output
  debug:
    var: jenkins_build

- name: Create a volume
  docker_volume:
    name: jenkins_data

- name: Chmod of docker sock to run agents outside container
  file:
    path: /var/run/docker.sock
    owner: root
    group: root
    mode: '666'
  become: true
    
- name: Start Jenkins
  tags: run_jenkins
  community.docker.docker_container:
    name: jenkins
    image: jenkins:v1.0
    volumes:
      - jenkins_data:/var/jenkins_home
      - /home/cddeploy/infra/jenkins/casc.yml:/var/jenkins_home/casc.yml
      - /home/cddeploy/infra/jenkins/job.groovy:/var/jenkins_home/job_dsl/job.groovy
      - /var/run/docker.sock:/var/run/docker.sock
    env:
      JENKINS_ADMIN_ID: "{{ jenkins_admin_id }}"
      JENKINS_ADMIN_PASSWORD: "{{ jenkins_admin_pwd }}"
    restart: true
    ports:
      - "{{ ports[0] }}:{{ ports[1] }}"
  register: jenkins_start

- name: Print jenkins start output
  debug:
    var: jenkins_start